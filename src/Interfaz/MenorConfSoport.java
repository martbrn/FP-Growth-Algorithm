/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import Algoritmo.ItemsetsFrecuentes.Comparacion;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.SwingConstants;
import javax.swing.SwingWorker;

// Ventana de advertencia si la confianza es menor al soporte
public class MenorConfSoport extends javax.swing.JFrame {

     private String RutaFinal; // Ruta del archivo
        private File path; // Archivo
         private String MinConf; // Umbral de confianza
    private String MinSup; // Umbral de soporte
      private ArrayList<Comparacion> Comparaciones; // Conjunto de comparaciones
      
      //Constructor de la clase
    public MenorConfSoport() {
        initComponents();
        this.setLocationRelativeTo(null);
    this.setSize(jPanel1.getSize());
       setIconImage(new ImageIcon(getClass().getResource("/Imagenes/icons-180x180.png")).getImage());
        jButton1.setHorizontalTextPosition(SwingConstants.LEFT);
            this.setResizable(false);
            this.setTitle("Advertencia - Confianza mayor a soporte");
    }
// Getters y Setters
    public String getRutaFinal() {
        return RutaFinal;
    }

    public void setRutaFinal(String RutaFinal) {
        this.RutaFinal = RutaFinal;
    }

    public File getPath() {
        return path;
    }

    public void setPath(File path) {
        this.path = path;
    }

    public String getMinConf() {
        return MinConf;
    }

    public void setMinConf(String MinConf) {
        this.MinConf = MinConf;
    }

    public String getMinSup() {
        return MinSup;
    }

    public void setMinSup(String MinSup) {
        this.MinSup = MinSup;
    }

    public ArrayList<Comparacion> getComparaciones() {
        return Comparaciones;
    }

    public void setComparaciones(ArrayList<Comparacion> Comparaciones) {
        this.Comparaciones = Comparaciones;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Advertencia");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(290, 50, 218, 45);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/if_101_Warning_183416.png"))); // NOI18N
        jPanel1.add(jLabel2);
        jLabel2.setBounds(150, 10, 130, 120);

        jButton2.setBackground(new java.awt.Color(0, 49, 77));
        jButton2.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/back2.png"))); // NOI18N
        jButton2.setText("Regresar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(90, 240, 220, 70);

        jButton1.setBackground(new java.awt.Color(0, 49, 77));
        jButton1.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/if_computer_118848.png"))); // NOI18N
        jButton1.setText("Continuar");
        jButton1.setMaximumSize(new java.awt.Dimension(187, 57));
        jButton1.setMinimumSize(new java.awt.Dimension(187, 57));
        jButton1.setPreferredSize(new java.awt.Dimension(187, 57));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(400, 240, 250, 70);

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("al soporte y así todas las reglas que se calculen serán válidas como salida. ");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(20, 200, 690, 30);

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("La confianza ingresada es menor al soporte, por lo tanto todas las posibles");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(20, 120, 680, 50);

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("reglas que se obtengan tendrán como confianza un valor mayor o igual");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(20, 160, 680, 40);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/hdblue.jpg"))); // NOI18N
        jLabel6.setText("jLabel6");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(0, 0, 750, 410);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 745, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Evento del boton regresar , volviendo a la pantalla de inicio
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        final SwingWorker worker = new SwingWorker() {
            @Override
            protected Object doInBackground() throws Exception {
                VentanaPrincipal Vent = new VentanaPrincipal(); // Se carga una nueva ventana de inicio
                Vent.setjTextPane1(MenorConfSoport.this.getRutaFinal());
                Vent.setPath(path);
                Vent.setjTextPane3(MenorConfSoport.this.getMinSup());
                Vent.setjTextPane4(MenorConfSoport.this.getMinConf());
                Vent.setComparaciones(MenorConfSoport.this.getComparaciones());
                Vent.setVisible(true);
                MenorConfSoport.this.dispose(); // Se cierra la ventana emergente
                return null;
            }
        };
        worker.execute();
    }//GEN-LAST:event_jButton2ActionPerformed

    // Evento del boton continuar, procediendo al calculo de las respectivas reglas
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        BarraProgreso barra;
        try {
            barra = new BarraProgreso (); //aqui se crea el objeto BarraProgreso
            barra.setRutaFinal(this.getRutaFinal());
            barra.setMinConf(MinConf);
            barra.setMinSup(MinSup);
            barra.setVisible(true);
            barra.setTitle("Espere por favor");
            final SwingWorker worker= new SwingWorker(){
                @Override
                protected Object doInBackground() throws Exception {
                    barra.GeneracionItemsCandidatos(); // Se incia el procesamiento del algoritmo FP-Growth
                    VentanaFinal VentF= new VentanaFinal(); // Se crea la ventana final
                    VentF.setRutaFinal(barra.getRutaFinal());
                    VentF.setPath(path);
                    VentF.setMinConf(barra.getMinConf());
                    VentF.setMinSup(barra.getMinSup());
                    VentF.setNumtransc(barra.getObGrowth().getNumTransc());
                    VentF.setConjunFrecuentes(barra.getObGrowth().getConjunFrecuentes());
                    VentF.setCOnjunReglas(barra.getObGrowth().getConjunReglas());
                    VentF.setTiempo(barra.getTiempo());
                    Comparacion compa= new Comparacion(); // Se crea el objeto comparacion utilizado para guardar los resultados de las corridas
                    compa.setMinSup(barra.getMinSup());
                    compa.setMinConf(barra.getMinConf());
                    compa.setTiempo(barra.getTiempo());
                    compa.setRegla(barra.getObGrowth().getConjunReglas().size());
                    MenorConfSoport.this.getComparaciones().add(compa); // Se guarda el objeto comparacion en una lista para ser utilizado
                    VentF.setComparaciones(MenorConfSoport.this.getComparaciones());
                    int cont=0;
                    for(int m=0; m< barra.getObGrowth().getConjunFrecuentes().size(); m++){
                        if (barra.getObGrowth().getConjunFrecuentes().get(m).getItemsets().size()>0){
                            cont=cont+1;
                        }
                    }
                    VentF.CargarCombo2();
                    VentF.CargarCombo(cont);
                    barra.dispose();
                    VentF.setVisible(true); // Se muestra la ventana final con los resultados obtenidos
                    final SwingWorker worker2= new SwingWorker(){
                        @Override
                        protected Object doInBackground() throws Exception {
                            VentF.CargarReglas(); // Se cargan las reglas obtenidas en la ventana final
                            VentF.OrdenarReglas(); // Se ordenan las reglas segun el soporte y la confianza
                            return null;
                        }
                    };
                    worker2.execute();
                    return null;
                }
            };
            worker.execute();
            this.dispose();
        } catch (IOException ex) {
            Logger.getLogger(MenorConfSoport.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenorConfSoport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenorConfSoport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenorConfSoport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenorConfSoport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenorConfSoport().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
