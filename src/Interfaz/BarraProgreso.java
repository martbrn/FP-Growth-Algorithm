
package Interfaz;

import Algoritmo.Growth;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;

public class BarraProgreso extends javax.swing.JFrame {

    private Growth obGrowth; // Objeto ObGrowth
    private String MinConf; //Umbral de confianza
    private String MinSup; // Umbral de soporte
    private String RutaFinal; // Ruta del archivo 
    private double tiempo; // Tiempo de procesamiento

 // Getters y Setters de los atributos
    public String getMinConf() {
        return MinConf;
    }

    public double getTiempo() {
        return tiempo;
    }

    public void setTiempo(double tiempo) {
        this.tiempo = tiempo;
    }

        public void setMinConf(String MinConf) {
        this.MinConf = MinConf;
    }

    public Growth getObGrowth() {
        return obGrowth;
    }

    public void setObGrowth(Growth obGrowth) {
        this.obGrowth = obGrowth;
    }

    public String getMinSup() {
        return MinSup;
    }

    public void setMinSup(String MinSup) {
        this.MinSup = MinSup;
    }

    public String getRutaFinal() {
        return RutaFinal;
    }

    public void setRutaFinal(String RutaFinal) {
        this.RutaFinal = RutaFinal;
    }
 // Constructor de clase    
    public BarraProgreso() throws FileNotFoundException, IOException {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setSize(jPanel1.getSize());
        this.setTitle("Espere por favor");
        this.setResizable(false);
        setIconImage(new ImageIcon(getClass().getResource("/Imagenes/icons-180x180.png")).getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jDialog1 = new javax.swing.JDialog();
        jDialog2 = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();

        jLabel5.setText("jLabel5");

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 153));

        jPanel1.setBackground(new java.awt.Color(0, 53, 100));
        jPanel1.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(jLabel2);
        jLabel2.setBounds(130, 110, 398, 39);

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Algoritmo FP-Growth");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(104, 4, 361, 45);

        jProgressBar1.setBackground(new java.awt.Color(0, 53, 100));
        jProgressBar1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jProgressBar1.setForeground(new java.awt.Color(0, 53, 100));
        jPanel1.add(jProgressBar1);
        jProgressBar1.setBounds(30, 58, 491, 46);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/hdblue.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 550, 230);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

     // Unico metodo de la clase , que lleva a cabo la ejecución del algoritmo FP-Growth
    public void GeneracionItemsCandidatos ()  throws IOException {  
       Integer CantidadProd;       
       Integer MiniCon= Integer.parseInt(this.getMinConf());
       Integer MiniSup= Integer.parseInt(this.getMinSup());
        double tiempoInicio;
        double tiempototal;
        tiempoInicio= System.currentTimeMillis(); // Tiempo en que inicia el procesamiento
        jProgressBar1.setIndeterminate(true);
        jLabel2.setText("Generando Frecuentes...");
        obGrowth= new Growth (this.getRutaFinal(),MiniCon,MiniSup);// Se crea el objeto FP-Growth que contiene los metodos principales del algoritmo
        CantidadProd = obGrowth.ObtenerCantProduc();// Se obtiene la cantidad de productos del dataset junto con el candidato numero 1
        obGrowth.GenerarFrecuenteUno(); // Se obtiene el Frecuente numero 1 , contabilizando las frecuencias de cada itemset del candidato numero 1 y calculando su soporte
        if (obGrowth.getCandidato().getItem().size()>0){
        obGrowth.GenerarItemSets();  // Se obtienen todos los itemsets frecuentes de tamaño mayor a 1 para la generación de las reglas    
                //Generamos las Reglas 
                jLabel2.setText("Generando Reglas...");
                if (obGrowth.getCandidato().getItem().size()>1){
                    obGrowth.generarReglas();// Se generan las reglas utilizando todos los frecuentes
                } 
                 tiempototal= System.currentTimeMillis() - tiempoInicio;// Se obtiene el tiempo de procesamiento
                this.setTiempo(tiempototal/1000);
    }
   }

 public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BarraProgreso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BarraProgreso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BarraProgreso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BarraProgreso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new BarraProgreso().setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(BarraProgreso.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(BarraProgreso.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    // End of variables declaration//GEN-END:variables
}
